[player:='X', board:=[[1,2,3],[4,5,6],[7,8,9]], _:=print("\n".join([" ".join([str(j) for j in x]) for x in [[1,2,3],[4,5,6],[7,8,9]]])),turns:=0, [[pos:=int(input(f"It's player {player}'s turn, enter a move [1-9]: "))-1, valid:=board[(pos)//3][(pos)%3] not in ('X', 'O'),board:=[[board[i][j] if board[i][j] != pos+1 else player for j in range(3)] for i in range(3)] if valid else board,player:=('X' if player == 'O' else 'O') if valid else player, turns:=turns+1 if valid else turns,_:=print("\n".join([" ".join([player if j==(pos+1) else str(j) for j in x]) for x in board])) if valid else print(end="")] if turns<9 and not ((any([all([x == ('X' if player == 'O' else 'O') for x in row]) for row in board]) or any([all([board[j][i] == ('X' if player == 'O' else 'O') for j in range(3)]) for i in range(3)]) or all([board[i][i] == ('X' if player == 'O' else 'O') for i in range(3)]) or all([board[i][2-i] == ('X' if player == 'O' else 'O') for i in range(3)]))) else "" for x in range(100)]]